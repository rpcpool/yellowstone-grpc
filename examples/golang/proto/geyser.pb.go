// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.12.4
// source: geyser.proto

package proto

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommitmentLevel int32

const (
	CommitmentLevel_PROCESSED CommitmentLevel = 0
	CommitmentLevel_CONFIRMED CommitmentLevel = 1
	CommitmentLevel_FINALIZED CommitmentLevel = 2
)

// Enum value maps for CommitmentLevel.
var (
	CommitmentLevel_name = map[int32]string{
		0: "PROCESSED",
		1: "CONFIRMED",
		2: "FINALIZED",
	}
	CommitmentLevel_value = map[string]int32{
		"PROCESSED": 0,
		"CONFIRMED": 1,
		"FINALIZED": 2,
	}
)

func (x CommitmentLevel) Enum() *CommitmentLevel {
	p := new(CommitmentLevel)
	*p = x
	return p
}

func (x CommitmentLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommitmentLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_geyser_proto_enumTypes[0].Descriptor()
}

func (CommitmentLevel) Type() protoreflect.EnumType {
	return &file_geyser_proto_enumTypes[0]
}

func (x CommitmentLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommitmentLevel.Descriptor instead.
func (CommitmentLevel) EnumDescriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{0}
}

type SlotStatus int32

const (
	SlotStatus_SLOT_PROCESSED            SlotStatus = 0
	SlotStatus_SLOT_CONFIRMED            SlotStatus = 1
	SlotStatus_SLOT_FINALIZED            SlotStatus = 2
	SlotStatus_SLOT_FIRST_SHRED_RECEIVED SlotStatus = 3
	SlotStatus_SLOT_COMPLETED            SlotStatus = 4
	SlotStatus_SLOT_CREATED_BANK         SlotStatus = 5
	SlotStatus_SLOT_DEAD                 SlotStatus = 6
)

// Enum value maps for SlotStatus.
var (
	SlotStatus_name = map[int32]string{
		0: "SLOT_PROCESSED",
		1: "SLOT_CONFIRMED",
		2: "SLOT_FINALIZED",
		3: "SLOT_FIRST_SHRED_RECEIVED",
		4: "SLOT_COMPLETED",
		5: "SLOT_CREATED_BANK",
		6: "SLOT_DEAD",
	}
	SlotStatus_value = map[string]int32{
		"SLOT_PROCESSED":            0,
		"SLOT_CONFIRMED":            1,
		"SLOT_FINALIZED":            2,
		"SLOT_FIRST_SHRED_RECEIVED": 3,
		"SLOT_COMPLETED":            4,
		"SLOT_CREATED_BANK":         5,
		"SLOT_DEAD":                 6,
	}
)

func (x SlotStatus) Enum() *SlotStatus {
	p := new(SlotStatus)
	*p = x
	return p
}

func (x SlotStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SlotStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_geyser_proto_enumTypes[1].Descriptor()
}

func (SlotStatus) Type() protoreflect.EnumType {
	return &file_geyser_proto_enumTypes[1]
}

func (x SlotStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SlotStatus.Descriptor instead.
func (SlotStatus) EnumDescriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{1}
}

type SubscribeRequest struct {
	state              protoimpl.MessageState                         `protogen:"open.v1"`
	Accounts           map[string]*SubscribeRequestFilterAccounts     `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Slots              map[string]*SubscribeRequestFilterSlots        `protobuf:"bytes,2,rep,name=slots,proto3" json:"slots,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Transactions       map[string]*SubscribeRequestFilterTransactions `protobuf:"bytes,3,rep,name=transactions,proto3" json:"transactions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	TransactionsStatus map[string]*SubscribeRequestFilterTransactions `protobuf:"bytes,10,rep,name=transactions_status,json=transactionsStatus,proto3" json:"transactions_status,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Blocks             map[string]*SubscribeRequestFilterBlocks       `protobuf:"bytes,4,rep,name=blocks,proto3" json:"blocks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	BlocksMeta         map[string]*SubscribeRequestFilterBlocksMeta   `protobuf:"bytes,5,rep,name=blocks_meta,json=blocksMeta,proto3" json:"blocks_meta,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Entry              map[string]*SubscribeRequestFilterEntry        `protobuf:"bytes,8,rep,name=entry,proto3" json:"entry,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Commitment         *CommitmentLevel                               `protobuf:"varint,6,opt,name=commitment,proto3,enum=geyser.CommitmentLevel,oneof" json:"commitment,omitempty"`
	AccountsDataSlice  []*SubscribeRequestAccountsDataSlice           `protobuf:"bytes,7,rep,name=accounts_data_slice,json=accountsDataSlice,proto3" json:"accounts_data_slice,omitempty"`
	Ping               *SubscribeRequestPing                          `protobuf:"bytes,9,opt,name=ping,proto3,oneof" json:"ping,omitempty"`
	FromSlot           *uint64                                        `protobuf:"varint,11,opt,name=from_slot,json=fromSlot,proto3,oneof" json:"from_slot,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	mi := &file_geyser_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{0}
}

func (x *SubscribeRequest) GetAccounts() map[string]*SubscribeRequestFilterAccounts {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *SubscribeRequest) GetSlots() map[string]*SubscribeRequestFilterSlots {
	if x != nil {
		return x.Slots
	}
	return nil
}

func (x *SubscribeRequest) GetTransactions() map[string]*SubscribeRequestFilterTransactions {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *SubscribeRequest) GetTransactionsStatus() map[string]*SubscribeRequestFilterTransactions {
	if x != nil {
		return x.TransactionsStatus
	}
	return nil
}

func (x *SubscribeRequest) GetBlocks() map[string]*SubscribeRequestFilterBlocks {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *SubscribeRequest) GetBlocksMeta() map[string]*SubscribeRequestFilterBlocksMeta {
	if x != nil {
		return x.BlocksMeta
	}
	return nil
}

func (x *SubscribeRequest) GetEntry() map[string]*SubscribeRequestFilterEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *SubscribeRequest) GetCommitment() CommitmentLevel {
	if x != nil && x.Commitment != nil {
		return *x.Commitment
	}
	return CommitmentLevel_PROCESSED
}

func (x *SubscribeRequest) GetAccountsDataSlice() []*SubscribeRequestAccountsDataSlice {
	if x != nil {
		return x.AccountsDataSlice
	}
	return nil
}

func (x *SubscribeRequest) GetPing() *SubscribeRequestPing {
	if x != nil {
		return x.Ping
	}
	return nil
}

func (x *SubscribeRequest) GetFromSlot() uint64 {
	if x != nil && x.FromSlot != nil {
		return *x.FromSlot
	}
	return 0
}

type SubscribeRequestFilterAccounts struct {
	state                protoimpl.MessageState                  `protogen:"open.v1"`
	Account              []string                                `protobuf:"bytes,2,rep,name=account,proto3" json:"account,omitempty"`
	Owner                []string                                `protobuf:"bytes,3,rep,name=owner,proto3" json:"owner,omitempty"`
	Filters              []*SubscribeRequestFilterAccountsFilter `protobuf:"bytes,4,rep,name=filters,proto3" json:"filters,omitempty"`
	NonemptyTxnSignature *bool                                   `protobuf:"varint,5,opt,name=nonempty_txn_signature,json=nonemptyTxnSignature,proto3,oneof" json:"nonempty_txn_signature,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *SubscribeRequestFilterAccounts) Reset() {
	*x = SubscribeRequestFilterAccounts{}
	mi := &file_geyser_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequestFilterAccounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequestFilterAccounts) ProtoMessage() {}

func (x *SubscribeRequestFilterAccounts) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequestFilterAccounts.ProtoReflect.Descriptor instead.
func (*SubscribeRequestFilterAccounts) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{1}
}

func (x *SubscribeRequestFilterAccounts) GetAccount() []string {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *SubscribeRequestFilterAccounts) GetOwner() []string {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *SubscribeRequestFilterAccounts) GetFilters() []*SubscribeRequestFilterAccountsFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *SubscribeRequestFilterAccounts) GetNonemptyTxnSignature() bool {
	if x != nil && x.NonemptyTxnSignature != nil {
		return *x.NonemptyTxnSignature
	}
	return false
}

type SubscribeRequestFilterAccountsFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Filter:
	//
	//	*SubscribeRequestFilterAccountsFilter_Memcmp
	//	*SubscribeRequestFilterAccountsFilter_Datasize
	//	*SubscribeRequestFilterAccountsFilter_TokenAccountState
	//	*SubscribeRequestFilterAccountsFilter_Lamports
	Filter        isSubscribeRequestFilterAccountsFilter_Filter `protobuf_oneof:"filter"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeRequestFilterAccountsFilter) Reset() {
	*x = SubscribeRequestFilterAccountsFilter{}
	mi := &file_geyser_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequestFilterAccountsFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequestFilterAccountsFilter) ProtoMessage() {}

func (x *SubscribeRequestFilterAccountsFilter) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequestFilterAccountsFilter.ProtoReflect.Descriptor instead.
func (*SubscribeRequestFilterAccountsFilter) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{2}
}

func (x *SubscribeRequestFilterAccountsFilter) GetFilter() isSubscribeRequestFilterAccountsFilter_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *SubscribeRequestFilterAccountsFilter) GetMemcmp() *SubscribeRequestFilterAccountsFilterMemcmp {
	if x != nil {
		if x, ok := x.Filter.(*SubscribeRequestFilterAccountsFilter_Memcmp); ok {
			return x.Memcmp
		}
	}
	return nil
}

func (x *SubscribeRequestFilterAccountsFilter) GetDatasize() uint64 {
	if x != nil {
		if x, ok := x.Filter.(*SubscribeRequestFilterAccountsFilter_Datasize); ok {
			return x.Datasize
		}
	}
	return 0
}

func (x *SubscribeRequestFilterAccountsFilter) GetTokenAccountState() bool {
	if x != nil {
		if x, ok := x.Filter.(*SubscribeRequestFilterAccountsFilter_TokenAccountState); ok {
			return x.TokenAccountState
		}
	}
	return false
}

func (x *SubscribeRequestFilterAccountsFilter) GetLamports() *SubscribeRequestFilterAccountsFilterLamports {
	if x != nil {
		if x, ok := x.Filter.(*SubscribeRequestFilterAccountsFilter_Lamports); ok {
			return x.Lamports
		}
	}
	return nil
}

type isSubscribeRequestFilterAccountsFilter_Filter interface {
	isSubscribeRequestFilterAccountsFilter_Filter()
}

type SubscribeRequestFilterAccountsFilter_Memcmp struct {
	Memcmp *SubscribeRequestFilterAccountsFilterMemcmp `protobuf:"bytes,1,opt,name=memcmp,proto3,oneof"`
}

type SubscribeRequestFilterAccountsFilter_Datasize struct {
	Datasize uint64 `protobuf:"varint,2,opt,name=datasize,proto3,oneof"`
}

type SubscribeRequestFilterAccountsFilter_TokenAccountState struct {
	TokenAccountState bool `protobuf:"varint,3,opt,name=token_account_state,json=tokenAccountState,proto3,oneof"`
}

type SubscribeRequestFilterAccountsFilter_Lamports struct {
	Lamports *SubscribeRequestFilterAccountsFilterLamports `protobuf:"bytes,4,opt,name=lamports,proto3,oneof"`
}

func (*SubscribeRequestFilterAccountsFilter_Memcmp) isSubscribeRequestFilterAccountsFilter_Filter() {}

func (*SubscribeRequestFilterAccountsFilter_Datasize) isSubscribeRequestFilterAccountsFilter_Filter() {
}

func (*SubscribeRequestFilterAccountsFilter_TokenAccountState) isSubscribeRequestFilterAccountsFilter_Filter() {
}

func (*SubscribeRequestFilterAccountsFilter_Lamports) isSubscribeRequestFilterAccountsFilter_Filter() {
}

type SubscribeRequestFilterAccountsFilterMemcmp struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Offset uint64                 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	// Types that are valid to be assigned to Data:
	//
	//	*SubscribeRequestFilterAccountsFilterMemcmp_Bytes
	//	*SubscribeRequestFilterAccountsFilterMemcmp_Base58
	//	*SubscribeRequestFilterAccountsFilterMemcmp_Base64
	Data          isSubscribeRequestFilterAccountsFilterMemcmp_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeRequestFilterAccountsFilterMemcmp) Reset() {
	*x = SubscribeRequestFilterAccountsFilterMemcmp{}
	mi := &file_geyser_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequestFilterAccountsFilterMemcmp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequestFilterAccountsFilterMemcmp) ProtoMessage() {}

func (x *SubscribeRequestFilterAccountsFilterMemcmp) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequestFilterAccountsFilterMemcmp.ProtoReflect.Descriptor instead.
func (*SubscribeRequestFilterAccountsFilterMemcmp) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{3}
}

func (x *SubscribeRequestFilterAccountsFilterMemcmp) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *SubscribeRequestFilterAccountsFilterMemcmp) GetData() isSubscribeRequestFilterAccountsFilterMemcmp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SubscribeRequestFilterAccountsFilterMemcmp) GetBytes() []byte {
	if x != nil {
		if x, ok := x.Data.(*SubscribeRequestFilterAccountsFilterMemcmp_Bytes); ok {
			return x.Bytes
		}
	}
	return nil
}

func (x *SubscribeRequestFilterAccountsFilterMemcmp) GetBase58() string {
	if x != nil {
		if x, ok := x.Data.(*SubscribeRequestFilterAccountsFilterMemcmp_Base58); ok {
			return x.Base58
		}
	}
	return ""
}

func (x *SubscribeRequestFilterAccountsFilterMemcmp) GetBase64() string {
	if x != nil {
		if x, ok := x.Data.(*SubscribeRequestFilterAccountsFilterMemcmp_Base64); ok {
			return x.Base64
		}
	}
	return ""
}

type isSubscribeRequestFilterAccountsFilterMemcmp_Data interface {
	isSubscribeRequestFilterAccountsFilterMemcmp_Data()
}

type SubscribeRequestFilterAccountsFilterMemcmp_Bytes struct {
	Bytes []byte `protobuf:"bytes,2,opt,name=bytes,proto3,oneof"`
}

type SubscribeRequestFilterAccountsFilterMemcmp_Base58 struct {
	Base58 string `protobuf:"bytes,3,opt,name=base58,proto3,oneof"`
}

type SubscribeRequestFilterAccountsFilterMemcmp_Base64 struct {
	Base64 string `protobuf:"bytes,4,opt,name=base64,proto3,oneof"`
}

func (*SubscribeRequestFilterAccountsFilterMemcmp_Bytes) isSubscribeRequestFilterAccountsFilterMemcmp_Data() {
}

func (*SubscribeRequestFilterAccountsFilterMemcmp_Base58) isSubscribeRequestFilterAccountsFilterMemcmp_Data() {
}

func (*SubscribeRequestFilterAccountsFilterMemcmp_Base64) isSubscribeRequestFilterAccountsFilterMemcmp_Data() {
}

type SubscribeRequestFilterAccountsFilterLamports struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Cmp:
	//
	//	*SubscribeRequestFilterAccountsFilterLamports_Eq
	//	*SubscribeRequestFilterAccountsFilterLamports_Ne
	//	*SubscribeRequestFilterAccountsFilterLamports_Lt
	//	*SubscribeRequestFilterAccountsFilterLamports_Gt
	Cmp           isSubscribeRequestFilterAccountsFilterLamports_Cmp `protobuf_oneof:"cmp"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeRequestFilterAccountsFilterLamports) Reset() {
	*x = SubscribeRequestFilterAccountsFilterLamports{}
	mi := &file_geyser_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequestFilterAccountsFilterLamports) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequestFilterAccountsFilterLamports) ProtoMessage() {}

func (x *SubscribeRequestFilterAccountsFilterLamports) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequestFilterAccountsFilterLamports.ProtoReflect.Descriptor instead.
func (*SubscribeRequestFilterAccountsFilterLamports) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{4}
}

func (x *SubscribeRequestFilterAccountsFilterLamports) GetCmp() isSubscribeRequestFilterAccountsFilterLamports_Cmp {
	if x != nil {
		return x.Cmp
	}
	return nil
}

func (x *SubscribeRequestFilterAccountsFilterLamports) GetEq() uint64 {
	if x != nil {
		if x, ok := x.Cmp.(*SubscribeRequestFilterAccountsFilterLamports_Eq); ok {
			return x.Eq
		}
	}
	return 0
}

func (x *SubscribeRequestFilterAccountsFilterLamports) GetNe() uint64 {
	if x != nil {
		if x, ok := x.Cmp.(*SubscribeRequestFilterAccountsFilterLamports_Ne); ok {
			return x.Ne
		}
	}
	return 0
}

func (x *SubscribeRequestFilterAccountsFilterLamports) GetLt() uint64 {
	if x != nil {
		if x, ok := x.Cmp.(*SubscribeRequestFilterAccountsFilterLamports_Lt); ok {
			return x.Lt
		}
	}
	return 0
}

func (x *SubscribeRequestFilterAccountsFilterLamports) GetGt() uint64 {
	if x != nil {
		if x, ok := x.Cmp.(*SubscribeRequestFilterAccountsFilterLamports_Gt); ok {
			return x.Gt
		}
	}
	return 0
}

type isSubscribeRequestFilterAccountsFilterLamports_Cmp interface {
	isSubscribeRequestFilterAccountsFilterLamports_Cmp()
}

type SubscribeRequestFilterAccountsFilterLamports_Eq struct {
	Eq uint64 `protobuf:"varint,1,opt,name=eq,proto3,oneof"`
}

type SubscribeRequestFilterAccountsFilterLamports_Ne struct {
	Ne uint64 `protobuf:"varint,2,opt,name=ne,proto3,oneof"`
}

type SubscribeRequestFilterAccountsFilterLamports_Lt struct {
	Lt uint64 `protobuf:"varint,3,opt,name=lt,proto3,oneof"`
}

type SubscribeRequestFilterAccountsFilterLamports_Gt struct {
	Gt uint64 `protobuf:"varint,4,opt,name=gt,proto3,oneof"`
}

func (*SubscribeRequestFilterAccountsFilterLamports_Eq) isSubscribeRequestFilterAccountsFilterLamports_Cmp() {
}

func (*SubscribeRequestFilterAccountsFilterLamports_Ne) isSubscribeRequestFilterAccountsFilterLamports_Cmp() {
}

func (*SubscribeRequestFilterAccountsFilterLamports_Lt) isSubscribeRequestFilterAccountsFilterLamports_Cmp() {
}

func (*SubscribeRequestFilterAccountsFilterLamports_Gt) isSubscribeRequestFilterAccountsFilterLamports_Cmp() {
}

type SubscribeRequestFilterSlots struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	FilterByCommitment *bool                  `protobuf:"varint,1,opt,name=filter_by_commitment,json=filterByCommitment,proto3,oneof" json:"filter_by_commitment,omitempty"`
	InterslotUpdates   *bool                  `protobuf:"varint,2,opt,name=interslot_updates,json=interslotUpdates,proto3,oneof" json:"interslot_updates,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SubscribeRequestFilterSlots) Reset() {
	*x = SubscribeRequestFilterSlots{}
	mi := &file_geyser_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequestFilterSlots) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequestFilterSlots) ProtoMessage() {}

func (x *SubscribeRequestFilterSlots) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequestFilterSlots.ProtoReflect.Descriptor instead.
func (*SubscribeRequestFilterSlots) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{5}
}

func (x *SubscribeRequestFilterSlots) GetFilterByCommitment() bool {
	if x != nil && x.FilterByCommitment != nil {
		return *x.FilterByCommitment
	}
	return false
}

func (x *SubscribeRequestFilterSlots) GetInterslotUpdates() bool {
	if x != nil && x.InterslotUpdates != nil {
		return *x.InterslotUpdates
	}
	return false
}

type SubscribeRequestFilterTransactions struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Vote            *bool                  `protobuf:"varint,1,opt,name=vote,proto3,oneof" json:"vote,omitempty"`
	Failed          *bool                  `protobuf:"varint,2,opt,name=failed,proto3,oneof" json:"failed,omitempty"`
	Signature       *string                `protobuf:"bytes,5,opt,name=signature,proto3,oneof" json:"signature,omitempty"`
	AccountInclude  []string               `protobuf:"bytes,3,rep,name=account_include,json=accountInclude,proto3" json:"account_include,omitempty"`
	AccountExclude  []string               `protobuf:"bytes,4,rep,name=account_exclude,json=accountExclude,proto3" json:"account_exclude,omitempty"`
	AccountRequired []string               `protobuf:"bytes,6,rep,name=account_required,json=accountRequired,proto3" json:"account_required,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SubscribeRequestFilterTransactions) Reset() {
	*x = SubscribeRequestFilterTransactions{}
	mi := &file_geyser_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequestFilterTransactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequestFilterTransactions) ProtoMessage() {}

func (x *SubscribeRequestFilterTransactions) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequestFilterTransactions.ProtoReflect.Descriptor instead.
func (*SubscribeRequestFilterTransactions) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{6}
}

func (x *SubscribeRequestFilterTransactions) GetVote() bool {
	if x != nil && x.Vote != nil {
		return *x.Vote
	}
	return false
}

func (x *SubscribeRequestFilterTransactions) GetFailed() bool {
	if x != nil && x.Failed != nil {
		return *x.Failed
	}
	return false
}

func (x *SubscribeRequestFilterTransactions) GetSignature() string {
	if x != nil && x.Signature != nil {
		return *x.Signature
	}
	return ""
}

func (x *SubscribeRequestFilterTransactions) GetAccountInclude() []string {
	if x != nil {
		return x.AccountInclude
	}
	return nil
}

func (x *SubscribeRequestFilterTransactions) GetAccountExclude() []string {
	if x != nil {
		return x.AccountExclude
	}
	return nil
}

func (x *SubscribeRequestFilterTransactions) GetAccountRequired() []string {
	if x != nil {
		return x.AccountRequired
	}
	return nil
}

type SubscribeRequestFilterBlocks struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	AccountInclude      []string               `protobuf:"bytes,1,rep,name=account_include,json=accountInclude,proto3" json:"account_include,omitempty"`
	IncludeTransactions *bool                  `protobuf:"varint,2,opt,name=include_transactions,json=includeTransactions,proto3,oneof" json:"include_transactions,omitempty"`
	IncludeAccounts     *bool                  `protobuf:"varint,3,opt,name=include_accounts,json=includeAccounts,proto3,oneof" json:"include_accounts,omitempty"`
	IncludeEntries      *bool                  `protobuf:"varint,4,opt,name=include_entries,json=includeEntries,proto3,oneof" json:"include_entries,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SubscribeRequestFilterBlocks) Reset() {
	*x = SubscribeRequestFilterBlocks{}
	mi := &file_geyser_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequestFilterBlocks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequestFilterBlocks) ProtoMessage() {}

func (x *SubscribeRequestFilterBlocks) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequestFilterBlocks.ProtoReflect.Descriptor instead.
func (*SubscribeRequestFilterBlocks) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{7}
}

func (x *SubscribeRequestFilterBlocks) GetAccountInclude() []string {
	if x != nil {
		return x.AccountInclude
	}
	return nil
}

func (x *SubscribeRequestFilterBlocks) GetIncludeTransactions() bool {
	if x != nil && x.IncludeTransactions != nil {
		return *x.IncludeTransactions
	}
	return false
}

func (x *SubscribeRequestFilterBlocks) GetIncludeAccounts() bool {
	if x != nil && x.IncludeAccounts != nil {
		return *x.IncludeAccounts
	}
	return false
}

func (x *SubscribeRequestFilterBlocks) GetIncludeEntries() bool {
	if x != nil && x.IncludeEntries != nil {
		return *x.IncludeEntries
	}
	return false
}

type SubscribeRequestFilterBlocksMeta struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeRequestFilterBlocksMeta) Reset() {
	*x = SubscribeRequestFilterBlocksMeta{}
	mi := &file_geyser_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequestFilterBlocksMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequestFilterBlocksMeta) ProtoMessage() {}

func (x *SubscribeRequestFilterBlocksMeta) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequestFilterBlocksMeta.ProtoReflect.Descriptor instead.
func (*SubscribeRequestFilterBlocksMeta) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{8}
}

type SubscribeRequestFilterEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeRequestFilterEntry) Reset() {
	*x = SubscribeRequestFilterEntry{}
	mi := &file_geyser_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequestFilterEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequestFilterEntry) ProtoMessage() {}

func (x *SubscribeRequestFilterEntry) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequestFilterEntry.ProtoReflect.Descriptor instead.
func (*SubscribeRequestFilterEntry) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{9}
}

type SubscribeRequestAccountsDataSlice struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Offset        uint64                 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Length        uint64                 `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeRequestAccountsDataSlice) Reset() {
	*x = SubscribeRequestAccountsDataSlice{}
	mi := &file_geyser_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequestAccountsDataSlice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequestAccountsDataSlice) ProtoMessage() {}

func (x *SubscribeRequestAccountsDataSlice) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequestAccountsDataSlice.ProtoReflect.Descriptor instead.
func (*SubscribeRequestAccountsDataSlice) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{10}
}

func (x *SubscribeRequestAccountsDataSlice) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *SubscribeRequestAccountsDataSlice) GetLength() uint64 {
	if x != nil {
		return x.Length
	}
	return 0
}

type SubscribeRequestPing struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeRequestPing) Reset() {
	*x = SubscribeRequestPing{}
	mi := &file_geyser_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequestPing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequestPing) ProtoMessage() {}

func (x *SubscribeRequestPing) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequestPing.ProtoReflect.Descriptor instead.
func (*SubscribeRequestPing) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{11}
}

func (x *SubscribeRequestPing) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SubscribeUpdate struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Filters []string               `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
	// Types that are valid to be assigned to UpdateOneof:
	//
	//	*SubscribeUpdate_Account
	//	*SubscribeUpdate_Slot
	//	*SubscribeUpdate_Transaction
	//	*SubscribeUpdate_TransactionStatus
	//	*SubscribeUpdate_Block
	//	*SubscribeUpdate_Ping
	//	*SubscribeUpdate_Pong
	//	*SubscribeUpdate_BlockMeta
	//	*SubscribeUpdate_Entry
	UpdateOneof   isSubscribeUpdate_UpdateOneof `protobuf_oneof:"update_oneof"`
	CreatedAt     *timestamp.Timestamp          `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeUpdate) Reset() {
	*x = SubscribeUpdate{}
	mi := &file_geyser_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeUpdate) ProtoMessage() {}

func (x *SubscribeUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeUpdate.ProtoReflect.Descriptor instead.
func (*SubscribeUpdate) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{12}
}

func (x *SubscribeUpdate) GetFilters() []string {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *SubscribeUpdate) GetUpdateOneof() isSubscribeUpdate_UpdateOneof {
	if x != nil {
		return x.UpdateOneof
	}
	return nil
}

func (x *SubscribeUpdate) GetAccount() *SubscribeUpdateAccount {
	if x != nil {
		if x, ok := x.UpdateOneof.(*SubscribeUpdate_Account); ok {
			return x.Account
		}
	}
	return nil
}

func (x *SubscribeUpdate) GetSlot() *SubscribeUpdateSlot {
	if x != nil {
		if x, ok := x.UpdateOneof.(*SubscribeUpdate_Slot); ok {
			return x.Slot
		}
	}
	return nil
}

func (x *SubscribeUpdate) GetTransaction() *SubscribeUpdateTransaction {
	if x != nil {
		if x, ok := x.UpdateOneof.(*SubscribeUpdate_Transaction); ok {
			return x.Transaction
		}
	}
	return nil
}

func (x *SubscribeUpdate) GetTransactionStatus() *SubscribeUpdateTransactionStatus {
	if x != nil {
		if x, ok := x.UpdateOneof.(*SubscribeUpdate_TransactionStatus); ok {
			return x.TransactionStatus
		}
	}
	return nil
}

func (x *SubscribeUpdate) GetBlock() *SubscribeUpdateBlock {
	if x != nil {
		if x, ok := x.UpdateOneof.(*SubscribeUpdate_Block); ok {
			return x.Block
		}
	}
	return nil
}

func (x *SubscribeUpdate) GetPing() *SubscribeUpdatePing {
	if x != nil {
		if x, ok := x.UpdateOneof.(*SubscribeUpdate_Ping); ok {
			return x.Ping
		}
	}
	return nil
}

func (x *SubscribeUpdate) GetPong() *SubscribeUpdatePong {
	if x != nil {
		if x, ok := x.UpdateOneof.(*SubscribeUpdate_Pong); ok {
			return x.Pong
		}
	}
	return nil
}

func (x *SubscribeUpdate) GetBlockMeta() *SubscribeUpdateBlockMeta {
	if x != nil {
		if x, ok := x.UpdateOneof.(*SubscribeUpdate_BlockMeta); ok {
			return x.BlockMeta
		}
	}
	return nil
}

func (x *SubscribeUpdate) GetEntry() *SubscribeUpdateEntry {
	if x != nil {
		if x, ok := x.UpdateOneof.(*SubscribeUpdate_Entry); ok {
			return x.Entry
		}
	}
	return nil
}

func (x *SubscribeUpdate) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type isSubscribeUpdate_UpdateOneof interface {
	isSubscribeUpdate_UpdateOneof()
}

type SubscribeUpdate_Account struct {
	Account *SubscribeUpdateAccount `protobuf:"bytes,2,opt,name=account,proto3,oneof"`
}

type SubscribeUpdate_Slot struct {
	Slot *SubscribeUpdateSlot `protobuf:"bytes,3,opt,name=slot,proto3,oneof"`
}

type SubscribeUpdate_Transaction struct {
	Transaction *SubscribeUpdateTransaction `protobuf:"bytes,4,opt,name=transaction,proto3,oneof"`
}

type SubscribeUpdate_TransactionStatus struct {
	TransactionStatus *SubscribeUpdateTransactionStatus `protobuf:"bytes,10,opt,name=transaction_status,json=transactionStatus,proto3,oneof"`
}

type SubscribeUpdate_Block struct {
	Block *SubscribeUpdateBlock `protobuf:"bytes,5,opt,name=block,proto3,oneof"`
}

type SubscribeUpdate_Ping struct {
	Ping *SubscribeUpdatePing `protobuf:"bytes,6,opt,name=ping,proto3,oneof"`
}

type SubscribeUpdate_Pong struct {
	Pong *SubscribeUpdatePong `protobuf:"bytes,9,opt,name=pong,proto3,oneof"`
}

type SubscribeUpdate_BlockMeta struct {
	BlockMeta *SubscribeUpdateBlockMeta `protobuf:"bytes,7,opt,name=block_meta,json=blockMeta,proto3,oneof"`
}

type SubscribeUpdate_Entry struct {
	Entry *SubscribeUpdateEntry `protobuf:"bytes,8,opt,name=entry,proto3,oneof"`
}

func (*SubscribeUpdate_Account) isSubscribeUpdate_UpdateOneof() {}

func (*SubscribeUpdate_Slot) isSubscribeUpdate_UpdateOneof() {}

func (*SubscribeUpdate_Transaction) isSubscribeUpdate_UpdateOneof() {}

func (*SubscribeUpdate_TransactionStatus) isSubscribeUpdate_UpdateOneof() {}

func (*SubscribeUpdate_Block) isSubscribeUpdate_UpdateOneof() {}

func (*SubscribeUpdate_Ping) isSubscribeUpdate_UpdateOneof() {}

func (*SubscribeUpdate_Pong) isSubscribeUpdate_UpdateOneof() {}

func (*SubscribeUpdate_BlockMeta) isSubscribeUpdate_UpdateOneof() {}

func (*SubscribeUpdate_Entry) isSubscribeUpdate_UpdateOneof() {}

type SubscribeUpdateAccount struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Account       *SubscribeUpdateAccountInfo `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Slot          uint64                      `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
	IsStartup     bool                        `protobuf:"varint,3,opt,name=is_startup,json=isStartup,proto3" json:"is_startup,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeUpdateAccount) Reset() {
	*x = SubscribeUpdateAccount{}
	mi := &file_geyser_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeUpdateAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeUpdateAccount) ProtoMessage() {}

func (x *SubscribeUpdateAccount) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeUpdateAccount.ProtoReflect.Descriptor instead.
func (*SubscribeUpdateAccount) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{13}
}

func (x *SubscribeUpdateAccount) GetAccount() *SubscribeUpdateAccountInfo {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *SubscribeUpdateAccount) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *SubscribeUpdateAccount) GetIsStartup() bool {
	if x != nil {
		return x.IsStartup
	}
	return false
}

type SubscribeUpdateAccountInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pubkey        []byte                 `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Lamports      uint64                 `protobuf:"varint,2,opt,name=lamports,proto3" json:"lamports,omitempty"`
	Owner         []byte                 `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	Executable    bool                   `protobuf:"varint,4,opt,name=executable,proto3" json:"executable,omitempty"`
	RentEpoch     uint64                 `protobuf:"varint,5,opt,name=rent_epoch,json=rentEpoch,proto3" json:"rent_epoch,omitempty"`
	Data          []byte                 `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	WriteVersion  uint64                 `protobuf:"varint,7,opt,name=write_version,json=writeVersion,proto3" json:"write_version,omitempty"`
	TxnSignature  []byte                 `protobuf:"bytes,8,opt,name=txn_signature,json=txnSignature,proto3,oneof" json:"txn_signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeUpdateAccountInfo) Reset() {
	*x = SubscribeUpdateAccountInfo{}
	mi := &file_geyser_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeUpdateAccountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeUpdateAccountInfo) ProtoMessage() {}

func (x *SubscribeUpdateAccountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeUpdateAccountInfo.ProtoReflect.Descriptor instead.
func (*SubscribeUpdateAccountInfo) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{14}
}

func (x *SubscribeUpdateAccountInfo) GetPubkey() []byte {
	if x != nil {
		return x.Pubkey
	}
	return nil
}

func (x *SubscribeUpdateAccountInfo) GetLamports() uint64 {
	if x != nil {
		return x.Lamports
	}
	return 0
}

func (x *SubscribeUpdateAccountInfo) GetOwner() []byte {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *SubscribeUpdateAccountInfo) GetExecutable() bool {
	if x != nil {
		return x.Executable
	}
	return false
}

func (x *SubscribeUpdateAccountInfo) GetRentEpoch() uint64 {
	if x != nil {
		return x.RentEpoch
	}
	return 0
}

func (x *SubscribeUpdateAccountInfo) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SubscribeUpdateAccountInfo) GetWriteVersion() uint64 {
	if x != nil {
		return x.WriteVersion
	}
	return 0
}

func (x *SubscribeUpdateAccountInfo) GetTxnSignature() []byte {
	if x != nil {
		return x.TxnSignature
	}
	return nil
}

type SubscribeUpdateSlot struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Slot          uint64                 `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	Parent        *uint64                `protobuf:"varint,2,opt,name=parent,proto3,oneof" json:"parent,omitempty"`
	Status        SlotStatus             `protobuf:"varint,3,opt,name=status,proto3,enum=geyser.SlotStatus" json:"status,omitempty"`
	DeadError     *string                `protobuf:"bytes,4,opt,name=dead_error,json=deadError,proto3,oneof" json:"dead_error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeUpdateSlot) Reset() {
	*x = SubscribeUpdateSlot{}
	mi := &file_geyser_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeUpdateSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeUpdateSlot) ProtoMessage() {}

func (x *SubscribeUpdateSlot) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeUpdateSlot.ProtoReflect.Descriptor instead.
func (*SubscribeUpdateSlot) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{15}
}

func (x *SubscribeUpdateSlot) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *SubscribeUpdateSlot) GetParent() uint64 {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return 0
}

func (x *SubscribeUpdateSlot) GetStatus() SlotStatus {
	if x != nil {
		return x.Status
	}
	return SlotStatus_SLOT_PROCESSED
}

func (x *SubscribeUpdateSlot) GetDeadError() string {
	if x != nil && x.DeadError != nil {
		return *x.DeadError
	}
	return ""
}

type SubscribeUpdateTransaction struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Transaction   *SubscribeUpdateTransactionInfo `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Slot          uint64                          `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeUpdateTransaction) Reset() {
	*x = SubscribeUpdateTransaction{}
	mi := &file_geyser_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeUpdateTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeUpdateTransaction) ProtoMessage() {}

func (x *SubscribeUpdateTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeUpdateTransaction.ProtoReflect.Descriptor instead.
func (*SubscribeUpdateTransaction) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{16}
}

func (x *SubscribeUpdateTransaction) GetTransaction() *SubscribeUpdateTransactionInfo {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *SubscribeUpdateTransaction) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

type SubscribeUpdateTransactionInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Signature     []byte                 `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	IsVote        bool                   `protobuf:"varint,2,opt,name=is_vote,json=isVote,proto3" json:"is_vote,omitempty"`
	Transaction   *Transaction           `protobuf:"bytes,3,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Meta          *TransactionStatusMeta `protobuf:"bytes,4,opt,name=meta,proto3" json:"meta,omitempty"`
	Index         uint64                 `protobuf:"varint,5,opt,name=index,proto3" json:"index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeUpdateTransactionInfo) Reset() {
	*x = SubscribeUpdateTransactionInfo{}
	mi := &file_geyser_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeUpdateTransactionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeUpdateTransactionInfo) ProtoMessage() {}

func (x *SubscribeUpdateTransactionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeUpdateTransactionInfo.ProtoReflect.Descriptor instead.
func (*SubscribeUpdateTransactionInfo) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{17}
}

func (x *SubscribeUpdateTransactionInfo) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *SubscribeUpdateTransactionInfo) GetIsVote() bool {
	if x != nil {
		return x.IsVote
	}
	return false
}

func (x *SubscribeUpdateTransactionInfo) GetTransaction() *Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *SubscribeUpdateTransactionInfo) GetMeta() *TransactionStatusMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *SubscribeUpdateTransactionInfo) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

type SubscribeUpdateTransactionStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Slot          uint64                 `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	Signature     []byte                 `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	IsVote        bool                   `protobuf:"varint,3,opt,name=is_vote,json=isVote,proto3" json:"is_vote,omitempty"`
	Index         uint64                 `protobuf:"varint,4,opt,name=index,proto3" json:"index,omitempty"`
	Err           *TransactionError      `protobuf:"bytes,5,opt,name=err,proto3" json:"err,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeUpdateTransactionStatus) Reset() {
	*x = SubscribeUpdateTransactionStatus{}
	mi := &file_geyser_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeUpdateTransactionStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeUpdateTransactionStatus) ProtoMessage() {}

func (x *SubscribeUpdateTransactionStatus) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeUpdateTransactionStatus.ProtoReflect.Descriptor instead.
func (*SubscribeUpdateTransactionStatus) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{18}
}

func (x *SubscribeUpdateTransactionStatus) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *SubscribeUpdateTransactionStatus) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *SubscribeUpdateTransactionStatus) GetIsVote() bool {
	if x != nil {
		return x.IsVote
	}
	return false
}

func (x *SubscribeUpdateTransactionStatus) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *SubscribeUpdateTransactionStatus) GetErr() *TransactionError {
	if x != nil {
		return x.Err
	}
	return nil
}

type SubscribeUpdateBlock struct {
	state                    protoimpl.MessageState            `protogen:"open.v1"`
	Slot                     uint64                            `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	Blockhash                string                            `protobuf:"bytes,2,opt,name=blockhash,proto3" json:"blockhash,omitempty"`
	Rewards                  *Rewards                          `protobuf:"bytes,3,opt,name=rewards,proto3" json:"rewards,omitempty"`
	BlockTime                *UnixTimestamp                    `protobuf:"bytes,4,opt,name=block_time,json=blockTime,proto3" json:"block_time,omitempty"`
	BlockHeight              *BlockHeight                      `protobuf:"bytes,5,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	ParentSlot               uint64                            `protobuf:"varint,7,opt,name=parent_slot,json=parentSlot,proto3" json:"parent_slot,omitempty"`
	ParentBlockhash          string                            `protobuf:"bytes,8,opt,name=parent_blockhash,json=parentBlockhash,proto3" json:"parent_blockhash,omitempty"`
	ExecutedTransactionCount uint64                            `protobuf:"varint,9,opt,name=executed_transaction_count,json=executedTransactionCount,proto3" json:"executed_transaction_count,omitempty"`
	Transactions             []*SubscribeUpdateTransactionInfo `protobuf:"bytes,6,rep,name=transactions,proto3" json:"transactions,omitempty"`
	UpdatedAccountCount      uint64                            `protobuf:"varint,10,opt,name=updated_account_count,json=updatedAccountCount,proto3" json:"updated_account_count,omitempty"`
	Accounts                 []*SubscribeUpdateAccountInfo     `protobuf:"bytes,11,rep,name=accounts,proto3" json:"accounts,omitempty"`
	EntriesCount             uint64                            `protobuf:"varint,12,opt,name=entries_count,json=entriesCount,proto3" json:"entries_count,omitempty"`
	Entries                  []*SubscribeUpdateEntry           `protobuf:"bytes,13,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *SubscribeUpdateBlock) Reset() {
	*x = SubscribeUpdateBlock{}
	mi := &file_geyser_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeUpdateBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeUpdateBlock) ProtoMessage() {}

func (x *SubscribeUpdateBlock) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeUpdateBlock.ProtoReflect.Descriptor instead.
func (*SubscribeUpdateBlock) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{19}
}

func (x *SubscribeUpdateBlock) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *SubscribeUpdateBlock) GetBlockhash() string {
	if x != nil {
		return x.Blockhash
	}
	return ""
}

func (x *SubscribeUpdateBlock) GetRewards() *Rewards {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *SubscribeUpdateBlock) GetBlockTime() *UnixTimestamp {
	if x != nil {
		return x.BlockTime
	}
	return nil
}

func (x *SubscribeUpdateBlock) GetBlockHeight() *BlockHeight {
	if x != nil {
		return x.BlockHeight
	}
	return nil
}

func (x *SubscribeUpdateBlock) GetParentSlot() uint64 {
	if x != nil {
		return x.ParentSlot
	}
	return 0
}

func (x *SubscribeUpdateBlock) GetParentBlockhash() string {
	if x != nil {
		return x.ParentBlockhash
	}
	return ""
}

func (x *SubscribeUpdateBlock) GetExecutedTransactionCount() uint64 {
	if x != nil {
		return x.ExecutedTransactionCount
	}
	return 0
}

func (x *SubscribeUpdateBlock) GetTransactions() []*SubscribeUpdateTransactionInfo {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *SubscribeUpdateBlock) GetUpdatedAccountCount() uint64 {
	if x != nil {
		return x.UpdatedAccountCount
	}
	return 0
}

func (x *SubscribeUpdateBlock) GetAccounts() []*SubscribeUpdateAccountInfo {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *SubscribeUpdateBlock) GetEntriesCount() uint64 {
	if x != nil {
		return x.EntriesCount
	}
	return 0
}

func (x *SubscribeUpdateBlock) GetEntries() []*SubscribeUpdateEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type SubscribeUpdateBlockMeta struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	Slot                     uint64                 `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	Blockhash                string                 `protobuf:"bytes,2,opt,name=blockhash,proto3" json:"blockhash,omitempty"`
	Rewards                  *Rewards               `protobuf:"bytes,3,opt,name=rewards,proto3" json:"rewards,omitempty"`
	BlockTime                *UnixTimestamp         `protobuf:"bytes,4,opt,name=block_time,json=blockTime,proto3" json:"block_time,omitempty"`
	BlockHeight              *BlockHeight           `protobuf:"bytes,5,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	ParentSlot               uint64                 `protobuf:"varint,6,opt,name=parent_slot,json=parentSlot,proto3" json:"parent_slot,omitempty"`
	ParentBlockhash          string                 `protobuf:"bytes,7,opt,name=parent_blockhash,json=parentBlockhash,proto3" json:"parent_blockhash,omitempty"`
	ExecutedTransactionCount uint64                 `protobuf:"varint,8,opt,name=executed_transaction_count,json=executedTransactionCount,proto3" json:"executed_transaction_count,omitempty"`
	EntriesCount             uint64                 `protobuf:"varint,9,opt,name=entries_count,json=entriesCount,proto3" json:"entries_count,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *SubscribeUpdateBlockMeta) Reset() {
	*x = SubscribeUpdateBlockMeta{}
	mi := &file_geyser_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeUpdateBlockMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeUpdateBlockMeta) ProtoMessage() {}

func (x *SubscribeUpdateBlockMeta) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeUpdateBlockMeta.ProtoReflect.Descriptor instead.
func (*SubscribeUpdateBlockMeta) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{20}
}

func (x *SubscribeUpdateBlockMeta) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *SubscribeUpdateBlockMeta) GetBlockhash() string {
	if x != nil {
		return x.Blockhash
	}
	return ""
}

func (x *SubscribeUpdateBlockMeta) GetRewards() *Rewards {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *SubscribeUpdateBlockMeta) GetBlockTime() *UnixTimestamp {
	if x != nil {
		return x.BlockTime
	}
	return nil
}

func (x *SubscribeUpdateBlockMeta) GetBlockHeight() *BlockHeight {
	if x != nil {
		return x.BlockHeight
	}
	return nil
}

func (x *SubscribeUpdateBlockMeta) GetParentSlot() uint64 {
	if x != nil {
		return x.ParentSlot
	}
	return 0
}

func (x *SubscribeUpdateBlockMeta) GetParentBlockhash() string {
	if x != nil {
		return x.ParentBlockhash
	}
	return ""
}

func (x *SubscribeUpdateBlockMeta) GetExecutedTransactionCount() uint64 {
	if x != nil {
		return x.ExecutedTransactionCount
	}
	return 0
}

func (x *SubscribeUpdateBlockMeta) GetEntriesCount() uint64 {
	if x != nil {
		return x.EntriesCount
	}
	return 0
}

type SubscribeUpdateEntry struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	Slot                     uint64                 `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	Index                    uint64                 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	NumHashes                uint64                 `protobuf:"varint,3,opt,name=num_hashes,json=numHashes,proto3" json:"num_hashes,omitempty"`
	Hash                     []byte                 `protobuf:"bytes,4,opt,name=hash,proto3" json:"hash,omitempty"`
	ExecutedTransactionCount uint64                 `protobuf:"varint,5,opt,name=executed_transaction_count,json=executedTransactionCount,proto3" json:"executed_transaction_count,omitempty"`
	StartingTransactionIndex uint64                 `protobuf:"varint,6,opt,name=starting_transaction_index,json=startingTransactionIndex,proto3" json:"starting_transaction_index,omitempty"` // added in v1.18, for solana 1.17 value is always 0
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *SubscribeUpdateEntry) Reset() {
	*x = SubscribeUpdateEntry{}
	mi := &file_geyser_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeUpdateEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeUpdateEntry) ProtoMessage() {}

func (x *SubscribeUpdateEntry) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeUpdateEntry.ProtoReflect.Descriptor instead.
func (*SubscribeUpdateEntry) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{21}
}

func (x *SubscribeUpdateEntry) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *SubscribeUpdateEntry) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *SubscribeUpdateEntry) GetNumHashes() uint64 {
	if x != nil {
		return x.NumHashes
	}
	return 0
}

func (x *SubscribeUpdateEntry) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *SubscribeUpdateEntry) GetExecutedTransactionCount() uint64 {
	if x != nil {
		return x.ExecutedTransactionCount
	}
	return 0
}

func (x *SubscribeUpdateEntry) GetStartingTransactionIndex() uint64 {
	if x != nil {
		return x.StartingTransactionIndex
	}
	return 0
}

type SubscribeUpdatePing struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeUpdatePing) Reset() {
	*x = SubscribeUpdatePing{}
	mi := &file_geyser_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeUpdatePing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeUpdatePing) ProtoMessage() {}

func (x *SubscribeUpdatePing) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeUpdatePing.ProtoReflect.Descriptor instead.
func (*SubscribeUpdatePing) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{22}
}

type SubscribeUpdatePong struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeUpdatePong) Reset() {
	*x = SubscribeUpdatePong{}
	mi := &file_geyser_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeUpdatePong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeUpdatePong) ProtoMessage() {}

func (x *SubscribeUpdatePong) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeUpdatePong.ProtoReflect.Descriptor instead.
func (*SubscribeUpdatePong) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{23}
}

func (x *SubscribeUpdatePong) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SubscribeReplayInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeReplayInfoRequest) Reset() {
	*x = SubscribeReplayInfoRequest{}
	mi := &file_geyser_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeReplayInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeReplayInfoRequest) ProtoMessage() {}

func (x *SubscribeReplayInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeReplayInfoRequest.ProtoReflect.Descriptor instead.
func (*SubscribeReplayInfoRequest) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{24}
}

type SubscribeReplayInfoResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	FirstAvailable *uint64                `protobuf:"varint,1,opt,name=first_available,json=firstAvailable,proto3,oneof" json:"first_available,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SubscribeReplayInfoResponse) Reset() {
	*x = SubscribeReplayInfoResponse{}
	mi := &file_geyser_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeReplayInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeReplayInfoResponse) ProtoMessage() {}

func (x *SubscribeReplayInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeReplayInfoResponse.ProtoReflect.Descriptor instead.
func (*SubscribeReplayInfoResponse) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{25}
}

func (x *SubscribeReplayInfoResponse) GetFirstAvailable() uint64 {
	if x != nil && x.FirstAvailable != nil {
		return *x.FirstAvailable
	}
	return 0
}

type PingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	mi := &file_geyser_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{26}
}

func (x *PingRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type PongResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PongResponse) Reset() {
	*x = PongResponse{}
	mi := &file_geyser_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PongResponse) ProtoMessage() {}

func (x *PongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PongResponse.ProtoReflect.Descriptor instead.
func (*PongResponse) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{27}
}

func (x *PongResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetLatestBlockhashRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Commitment    *CommitmentLevel       `protobuf:"varint,1,opt,name=commitment,proto3,enum=geyser.CommitmentLevel,oneof" json:"commitment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLatestBlockhashRequest) Reset() {
	*x = GetLatestBlockhashRequest{}
	mi := &file_geyser_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLatestBlockhashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestBlockhashRequest) ProtoMessage() {}

func (x *GetLatestBlockhashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestBlockhashRequest.ProtoReflect.Descriptor instead.
func (*GetLatestBlockhashRequest) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{28}
}

func (x *GetLatestBlockhashRequest) GetCommitment() CommitmentLevel {
	if x != nil && x.Commitment != nil {
		return *x.Commitment
	}
	return CommitmentLevel_PROCESSED
}

type GetLatestBlockhashResponse struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Slot                 uint64                 `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	Blockhash            string                 `protobuf:"bytes,2,opt,name=blockhash,proto3" json:"blockhash,omitempty"`
	LastValidBlockHeight uint64                 `protobuf:"varint,3,opt,name=last_valid_block_height,json=lastValidBlockHeight,proto3" json:"last_valid_block_height,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetLatestBlockhashResponse) Reset() {
	*x = GetLatestBlockhashResponse{}
	mi := &file_geyser_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLatestBlockhashResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestBlockhashResponse) ProtoMessage() {}

func (x *GetLatestBlockhashResponse) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestBlockhashResponse.ProtoReflect.Descriptor instead.
func (*GetLatestBlockhashResponse) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{29}
}

func (x *GetLatestBlockhashResponse) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *GetLatestBlockhashResponse) GetBlockhash() string {
	if x != nil {
		return x.Blockhash
	}
	return ""
}

func (x *GetLatestBlockhashResponse) GetLastValidBlockHeight() uint64 {
	if x != nil {
		return x.LastValidBlockHeight
	}
	return 0
}

type GetBlockHeightRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Commitment    *CommitmentLevel       `protobuf:"varint,1,opt,name=commitment,proto3,enum=geyser.CommitmentLevel,oneof" json:"commitment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBlockHeightRequest) Reset() {
	*x = GetBlockHeightRequest{}
	mi := &file_geyser_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlockHeightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockHeightRequest) ProtoMessage() {}

func (x *GetBlockHeightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockHeightRequest.ProtoReflect.Descriptor instead.
func (*GetBlockHeightRequest) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{30}
}

func (x *GetBlockHeightRequest) GetCommitment() CommitmentLevel {
	if x != nil && x.Commitment != nil {
		return *x.Commitment
	}
	return CommitmentLevel_PROCESSED
}

type GetBlockHeightResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BlockHeight   uint64                 `protobuf:"varint,1,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBlockHeightResponse) Reset() {
	*x = GetBlockHeightResponse{}
	mi := &file_geyser_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlockHeightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockHeightResponse) ProtoMessage() {}

func (x *GetBlockHeightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockHeightResponse.ProtoReflect.Descriptor instead.
func (*GetBlockHeightResponse) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{31}
}

func (x *GetBlockHeightResponse) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type GetSlotRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Commitment    *CommitmentLevel       `protobuf:"varint,1,opt,name=commitment,proto3,enum=geyser.CommitmentLevel,oneof" json:"commitment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSlotRequest) Reset() {
	*x = GetSlotRequest{}
	mi := &file_geyser_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSlotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSlotRequest) ProtoMessage() {}

func (x *GetSlotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSlotRequest.ProtoReflect.Descriptor instead.
func (*GetSlotRequest) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{32}
}

func (x *GetSlotRequest) GetCommitment() CommitmentLevel {
	if x != nil && x.Commitment != nil {
		return *x.Commitment
	}
	return CommitmentLevel_PROCESSED
}

type GetSlotResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Slot          uint64                 `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSlotResponse) Reset() {
	*x = GetSlotResponse{}
	mi := &file_geyser_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSlotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSlotResponse) ProtoMessage() {}

func (x *GetSlotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSlotResponse.ProtoReflect.Descriptor instead.
func (*GetSlotResponse) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{33}
}

func (x *GetSlotResponse) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

type GetVersionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVersionRequest) Reset() {
	*x = GetVersionRequest{}
	mi := &file_geyser_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionRequest) ProtoMessage() {}

func (x *GetVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionRequest.ProtoReflect.Descriptor instead.
func (*GetVersionRequest) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{34}
}

type GetVersionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVersionResponse) Reset() {
	*x = GetVersionResponse{}
	mi := &file_geyser_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionResponse) ProtoMessage() {}

func (x *GetVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionResponse.ProtoReflect.Descriptor instead.
func (*GetVersionResponse) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{35}
}

func (x *GetVersionResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type IsBlockhashValidRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Blockhash     string                 `protobuf:"bytes,1,opt,name=blockhash,proto3" json:"blockhash,omitempty"`
	Commitment    *CommitmentLevel       `protobuf:"varint,2,opt,name=commitment,proto3,enum=geyser.CommitmentLevel,oneof" json:"commitment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsBlockhashValidRequest) Reset() {
	*x = IsBlockhashValidRequest{}
	mi := &file_geyser_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsBlockhashValidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsBlockhashValidRequest) ProtoMessage() {}

func (x *IsBlockhashValidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsBlockhashValidRequest.ProtoReflect.Descriptor instead.
func (*IsBlockhashValidRequest) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{36}
}

func (x *IsBlockhashValidRequest) GetBlockhash() string {
	if x != nil {
		return x.Blockhash
	}
	return ""
}

func (x *IsBlockhashValidRequest) GetCommitment() CommitmentLevel {
	if x != nil && x.Commitment != nil {
		return *x.Commitment
	}
	return CommitmentLevel_PROCESSED
}

type IsBlockhashValidResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Slot          uint64                 `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	Valid         bool                   `protobuf:"varint,2,opt,name=valid,proto3" json:"valid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsBlockhashValidResponse) Reset() {
	*x = IsBlockhashValidResponse{}
	mi := &file_geyser_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsBlockhashValidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsBlockhashValidResponse) ProtoMessage() {}

func (x *IsBlockhashValidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_geyser_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsBlockhashValidResponse.ProtoReflect.Descriptor instead.
func (*IsBlockhashValidResponse) Descriptor() ([]byte, []int) {
	return file_geyser_proto_rawDescGZIP(), []int{37}
}

func (x *IsBlockhashValidResponse) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *IsBlockhashValidResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

var File_geyser_proto protoreflect.FileDescriptor

const file_geyser_proto_rawDesc = "" +
	"\n" +
	"\fgeyser.proto\x12\x06geyser\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x14solana-storage.proto\"\xed\v\n" +
	"\x10SubscribeRequest\x12B\n" +
	"\baccounts\x18\x01 \x03(\v2&.geyser.SubscribeRequest.AccountsEntryR\baccounts\x129\n" +
	"\x05slots\x18\x02 \x03(\v2#.geyser.SubscribeRequest.SlotsEntryR\x05slots\x12N\n" +
	"\ftransactions\x18\x03 \x03(\v2*.geyser.SubscribeRequest.TransactionsEntryR\ftransactions\x12a\n" +
	"\x13transactions_status\x18\n" +
	" \x03(\v20.geyser.SubscribeRequest.TransactionsStatusEntryR\x12transactionsStatus\x12<\n" +
	"\x06blocks\x18\x04 \x03(\v2$.geyser.SubscribeRequest.BlocksEntryR\x06blocks\x12I\n" +
	"\vblocks_meta\x18\x05 \x03(\v2(.geyser.SubscribeRequest.BlocksMetaEntryR\n" +
	"blocksMeta\x129\n" +
	"\x05entry\x18\b \x03(\v2#.geyser.SubscribeRequest.EntryEntryR\x05entry\x12<\n" +
	"\n" +
	"commitment\x18\x06 \x01(\x0e2\x17.geyser.CommitmentLevelH\x00R\n" +
	"commitment\x88\x01\x01\x12Y\n" +
	"\x13accounts_data_slice\x18\a \x03(\v2).geyser.SubscribeRequestAccountsDataSliceR\x11accountsDataSlice\x125\n" +
	"\x04ping\x18\t \x01(\v2\x1c.geyser.SubscribeRequestPingH\x01R\x04ping\x88\x01\x01\x12 \n" +
	"\tfrom_slot\x18\v \x01(\x04H\x02R\bfromSlot\x88\x01\x01\x1ac\n" +
	"\rAccountsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12<\n" +
	"\x05value\x18\x02 \x01(\v2&.geyser.SubscribeRequestFilterAccountsR\x05value:\x028\x01\x1a]\n" +
	"\n" +
	"SlotsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x129\n" +
	"\x05value\x18\x02 \x01(\v2#.geyser.SubscribeRequestFilterSlotsR\x05value:\x028\x01\x1ak\n" +
	"\x11TransactionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12@\n" +
	"\x05value\x18\x02 \x01(\v2*.geyser.SubscribeRequestFilterTransactionsR\x05value:\x028\x01\x1aq\n" +
	"\x17TransactionsStatusEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12@\n" +
	"\x05value\x18\x02 \x01(\v2*.geyser.SubscribeRequestFilterTransactionsR\x05value:\x028\x01\x1a_\n" +
	"\vBlocksEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12:\n" +
	"\x05value\x18\x02 \x01(\v2$.geyser.SubscribeRequestFilterBlocksR\x05value:\x028\x01\x1ag\n" +
	"\x0fBlocksMetaEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12>\n" +
	"\x05value\x18\x02 \x01(\v2(.geyser.SubscribeRequestFilterBlocksMetaR\x05value:\x028\x01\x1a]\n" +
	"\n" +
	"EntryEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x129\n" +
	"\x05value\x18\x02 \x01(\v2#.geyser.SubscribeRequestFilterEntryR\x05value:\x028\x01B\r\n" +
	"\v_commitmentB\a\n" +
	"\x05_pingB\f\n" +
	"\n" +
	"_from_slot\"\xee\x01\n" +
	"\x1eSubscribeRequestFilterAccounts\x12\x18\n" +
	"\aaccount\x18\x02 \x03(\tR\aaccount\x12\x14\n" +
	"\x05owner\x18\x03 \x03(\tR\x05owner\x12F\n" +
	"\afilters\x18\x04 \x03(\v2,.geyser.SubscribeRequestFilterAccountsFilterR\afilters\x129\n" +
	"\x16nonempty_txn_signature\x18\x05 \x01(\bH\x00R\x14nonemptyTxnSignature\x88\x01\x01B\x19\n" +
	"\x17_nonempty_txn_signature\"\xa2\x02\n" +
	"$SubscribeRequestFilterAccountsFilter\x12L\n" +
	"\x06memcmp\x18\x01 \x01(\v22.geyser.SubscribeRequestFilterAccountsFilterMemcmpH\x00R\x06memcmp\x12\x1c\n" +
	"\bdatasize\x18\x02 \x01(\x04H\x00R\bdatasize\x120\n" +
	"\x13token_account_state\x18\x03 \x01(\bH\x00R\x11tokenAccountState\x12R\n" +
	"\blamports\x18\x04 \x01(\v24.geyser.SubscribeRequestFilterAccountsFilterLamportsH\x00R\blamportsB\b\n" +
	"\x06filter\"\x98\x01\n" +
	"*SubscribeRequestFilterAccountsFilterMemcmp\x12\x16\n" +
	"\x06offset\x18\x01 \x01(\x04R\x06offset\x12\x16\n" +
	"\x05bytes\x18\x02 \x01(\fH\x00R\x05bytes\x12\x18\n" +
	"\x06base58\x18\x03 \x01(\tH\x00R\x06base58\x12\x18\n" +
	"\x06base64\x18\x04 \x01(\tH\x00R\x06base64B\x06\n" +
	"\x04data\"}\n" +
	",SubscribeRequestFilterAccountsFilterLamports\x12\x10\n" +
	"\x02eq\x18\x01 \x01(\x04H\x00R\x02eq\x12\x10\n" +
	"\x02ne\x18\x02 \x01(\x04H\x00R\x02ne\x12\x10\n" +
	"\x02lt\x18\x03 \x01(\x04H\x00R\x02lt\x12\x10\n" +
	"\x02gt\x18\x04 \x01(\x04H\x00R\x02gtB\x05\n" +
	"\x03cmp\"\xb5\x01\n" +
	"\x1bSubscribeRequestFilterSlots\x125\n" +
	"\x14filter_by_commitment\x18\x01 \x01(\bH\x00R\x12filterByCommitment\x88\x01\x01\x120\n" +
	"\x11interslot_updates\x18\x02 \x01(\bH\x01R\x10interslotUpdates\x88\x01\x01B\x17\n" +
	"\x15_filter_by_commitmentB\x14\n" +
	"\x12_interslot_updates\"\x9c\x02\n" +
	"\"SubscribeRequestFilterTransactions\x12\x17\n" +
	"\x04vote\x18\x01 \x01(\bH\x00R\x04vote\x88\x01\x01\x12\x1b\n" +
	"\x06failed\x18\x02 \x01(\bH\x01R\x06failed\x88\x01\x01\x12!\n" +
	"\tsignature\x18\x05 \x01(\tH\x02R\tsignature\x88\x01\x01\x12'\n" +
	"\x0faccount_include\x18\x03 \x03(\tR\x0eaccountInclude\x12'\n" +
	"\x0faccount_exclude\x18\x04 \x03(\tR\x0eaccountExclude\x12)\n" +
	"\x10account_required\x18\x06 \x03(\tR\x0faccountRequiredB\a\n" +
	"\x05_voteB\t\n" +
	"\a_failedB\f\n" +
	"\n" +
	"_signature\"\x9f\x02\n" +
	"\x1cSubscribeRequestFilterBlocks\x12'\n" +
	"\x0faccount_include\x18\x01 \x03(\tR\x0eaccountInclude\x126\n" +
	"\x14include_transactions\x18\x02 \x01(\bH\x00R\x13includeTransactions\x88\x01\x01\x12.\n" +
	"\x10include_accounts\x18\x03 \x01(\bH\x01R\x0fincludeAccounts\x88\x01\x01\x12,\n" +
	"\x0finclude_entries\x18\x04 \x01(\bH\x02R\x0eincludeEntries\x88\x01\x01B\x17\n" +
	"\x15_include_transactionsB\x13\n" +
	"\x11_include_accountsB\x12\n" +
	"\x10_include_entries\"\"\n" +
	" SubscribeRequestFilterBlocksMeta\"\x1d\n" +
	"\x1bSubscribeRequestFilterEntry\"S\n" +
	"!SubscribeRequestAccountsDataSlice\x12\x16\n" +
	"\x06offset\x18\x01 \x01(\x04R\x06offset\x12\x16\n" +
	"\x06length\x18\x02 \x01(\x04R\x06length\"&\n" +
	"\x14SubscribeRequestPing\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"\x9d\x05\n" +
	"\x0fSubscribeUpdate\x12\x18\n" +
	"\afilters\x18\x01 \x03(\tR\afilters\x12:\n" +
	"\aaccount\x18\x02 \x01(\v2\x1e.geyser.SubscribeUpdateAccountH\x00R\aaccount\x121\n" +
	"\x04slot\x18\x03 \x01(\v2\x1b.geyser.SubscribeUpdateSlotH\x00R\x04slot\x12F\n" +
	"\vtransaction\x18\x04 \x01(\v2\".geyser.SubscribeUpdateTransactionH\x00R\vtransaction\x12Y\n" +
	"\x12transaction_status\x18\n" +
	" \x01(\v2(.geyser.SubscribeUpdateTransactionStatusH\x00R\x11transactionStatus\x124\n" +
	"\x05block\x18\x05 \x01(\v2\x1c.geyser.SubscribeUpdateBlockH\x00R\x05block\x121\n" +
	"\x04ping\x18\x06 \x01(\v2\x1b.geyser.SubscribeUpdatePingH\x00R\x04ping\x121\n" +
	"\x04pong\x18\t \x01(\v2\x1b.geyser.SubscribeUpdatePongH\x00R\x04pong\x12A\n" +
	"\n" +
	"block_meta\x18\a \x01(\v2 .geyser.SubscribeUpdateBlockMetaH\x00R\tblockMeta\x124\n" +
	"\x05entry\x18\b \x01(\v2\x1c.geyser.SubscribeUpdateEntryH\x00R\x05entry\x129\n" +
	"\n" +
	"created_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAtB\x0e\n" +
	"\fupdate_oneof\"\x89\x01\n" +
	"\x16SubscribeUpdateAccount\x12<\n" +
	"\aaccount\x18\x01 \x01(\v2\".geyser.SubscribeUpdateAccountInfoR\aaccount\x12\x12\n" +
	"\x04slot\x18\x02 \x01(\x04R\x04slot\x12\x1d\n" +
	"\n" +
	"is_startup\x18\x03 \x01(\bR\tisStartup\"\x9a\x02\n" +
	"\x1aSubscribeUpdateAccountInfo\x12\x16\n" +
	"\x06pubkey\x18\x01 \x01(\fR\x06pubkey\x12\x1a\n" +
	"\blamports\x18\x02 \x01(\x04R\blamports\x12\x14\n" +
	"\x05owner\x18\x03 \x01(\fR\x05owner\x12\x1e\n" +
	"\n" +
	"executable\x18\x04 \x01(\bR\n" +
	"executable\x12\x1d\n" +
	"\n" +
	"rent_epoch\x18\x05 \x01(\x04R\trentEpoch\x12\x12\n" +
	"\x04data\x18\x06 \x01(\fR\x04data\x12#\n" +
	"\rwrite_version\x18\a \x01(\x04R\fwriteVersion\x12(\n" +
	"\rtxn_signature\x18\b \x01(\fH\x00R\ftxnSignature\x88\x01\x01B\x10\n" +
	"\x0e_txn_signature\"\xb0\x01\n" +
	"\x13SubscribeUpdateSlot\x12\x12\n" +
	"\x04slot\x18\x01 \x01(\x04R\x04slot\x12\x1b\n" +
	"\x06parent\x18\x02 \x01(\x04H\x00R\x06parent\x88\x01\x01\x12*\n" +
	"\x06status\x18\x03 \x01(\x0e2\x12.geyser.SlotStatusR\x06status\x12\"\n" +
	"\n" +
	"dead_error\x18\x04 \x01(\tH\x01R\tdeadError\x88\x01\x01B\t\n" +
	"\a_parentB\r\n" +
	"\v_dead_error\"z\n" +
	"\x1aSubscribeUpdateTransaction\x12H\n" +
	"\vtransaction\x18\x01 \x01(\v2&.geyser.SubscribeUpdateTransactionInfoR\vtransaction\x12\x12\n" +
	"\x04slot\x18\x02 \x01(\x04R\x04slot\"\x85\x02\n" +
	"\x1eSubscribeUpdateTransactionInfo\x12\x1c\n" +
	"\tsignature\x18\x01 \x01(\fR\tsignature\x12\x17\n" +
	"\ais_vote\x18\x02 \x01(\bR\x06isVote\x12L\n" +
	"\vtransaction\x18\x03 \x01(\v2*.solana.storage.ConfirmedBlock.TransactionR\vtransaction\x12H\n" +
	"\x04meta\x18\x04 \x01(\v24.solana.storage.ConfirmedBlock.TransactionStatusMetaR\x04meta\x12\x14\n" +
	"\x05index\x18\x05 \x01(\x04R\x05index\"\xc6\x01\n" +
	" SubscribeUpdateTransactionStatus\x12\x12\n" +
	"\x04slot\x18\x01 \x01(\x04R\x04slot\x12\x1c\n" +
	"\tsignature\x18\x02 \x01(\fR\tsignature\x12\x17\n" +
	"\ais_vote\x18\x03 \x01(\bR\x06isVote\x12\x14\n" +
	"\x05index\x18\x04 \x01(\x04R\x05index\x12A\n" +
	"\x03err\x18\x05 \x01(\v2/.solana.storage.ConfirmedBlock.TransactionErrorR\x03err\"\xcd\x05\n" +
	"\x14SubscribeUpdateBlock\x12\x12\n" +
	"\x04slot\x18\x01 \x01(\x04R\x04slot\x12\x1c\n" +
	"\tblockhash\x18\x02 \x01(\tR\tblockhash\x12@\n" +
	"\arewards\x18\x03 \x01(\v2&.solana.storage.ConfirmedBlock.RewardsR\arewards\x12K\n" +
	"\n" +
	"block_time\x18\x04 \x01(\v2,.solana.storage.ConfirmedBlock.UnixTimestampR\tblockTime\x12M\n" +
	"\fblock_height\x18\x05 \x01(\v2*.solana.storage.ConfirmedBlock.BlockHeightR\vblockHeight\x12\x1f\n" +
	"\vparent_slot\x18\a \x01(\x04R\n" +
	"parentSlot\x12)\n" +
	"\x10parent_blockhash\x18\b \x01(\tR\x0fparentBlockhash\x12<\n" +
	"\x1aexecuted_transaction_count\x18\t \x01(\x04R\x18executedTransactionCount\x12J\n" +
	"\ftransactions\x18\x06 \x03(\v2&.geyser.SubscribeUpdateTransactionInfoR\ftransactions\x122\n" +
	"\x15updated_account_count\x18\n" +
	" \x01(\x04R\x13updatedAccountCount\x12>\n" +
	"\baccounts\x18\v \x03(\v2\".geyser.SubscribeUpdateAccountInfoR\baccounts\x12#\n" +
	"\rentries_count\x18\f \x01(\x04R\fentriesCount\x126\n" +
	"\aentries\x18\r \x03(\v2\x1c.geyser.SubscribeUpdateEntryR\aentries\"\xd9\x03\n" +
	"\x18SubscribeUpdateBlockMeta\x12\x12\n" +
	"\x04slot\x18\x01 \x01(\x04R\x04slot\x12\x1c\n" +
	"\tblockhash\x18\x02 \x01(\tR\tblockhash\x12@\n" +
	"\arewards\x18\x03 \x01(\v2&.solana.storage.ConfirmedBlock.RewardsR\arewards\x12K\n" +
	"\n" +
	"block_time\x18\x04 \x01(\v2,.solana.storage.ConfirmedBlock.UnixTimestampR\tblockTime\x12M\n" +
	"\fblock_height\x18\x05 \x01(\v2*.solana.storage.ConfirmedBlock.BlockHeightR\vblockHeight\x12\x1f\n" +
	"\vparent_slot\x18\x06 \x01(\x04R\n" +
	"parentSlot\x12)\n" +
	"\x10parent_blockhash\x18\a \x01(\tR\x0fparentBlockhash\x12<\n" +
	"\x1aexecuted_transaction_count\x18\b \x01(\x04R\x18executedTransactionCount\x12#\n" +
	"\rentries_count\x18\t \x01(\x04R\fentriesCount\"\xef\x01\n" +
	"\x14SubscribeUpdateEntry\x12\x12\n" +
	"\x04slot\x18\x01 \x01(\x04R\x04slot\x12\x14\n" +
	"\x05index\x18\x02 \x01(\x04R\x05index\x12\x1d\n" +
	"\n" +
	"num_hashes\x18\x03 \x01(\x04R\tnumHashes\x12\x12\n" +
	"\x04hash\x18\x04 \x01(\fR\x04hash\x12<\n" +
	"\x1aexecuted_transaction_count\x18\x05 \x01(\x04R\x18executedTransactionCount\x12<\n" +
	"\x1astarting_transaction_index\x18\x06 \x01(\x04R\x18startingTransactionIndex\"\x15\n" +
	"\x13SubscribeUpdatePing\"%\n" +
	"\x13SubscribeUpdatePong\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"\x1c\n" +
	"\x1aSubscribeReplayInfoRequest\"_\n" +
	"\x1bSubscribeReplayInfoResponse\x12,\n" +
	"\x0ffirst_available\x18\x01 \x01(\x04H\x00R\x0efirstAvailable\x88\x01\x01B\x12\n" +
	"\x10_first_available\"#\n" +
	"\vPingRequest\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\"$\n" +
	"\fPongResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\"h\n" +
	"\x19GetLatestBlockhashRequest\x12<\n" +
	"\n" +
	"commitment\x18\x01 \x01(\x0e2\x17.geyser.CommitmentLevelH\x00R\n" +
	"commitment\x88\x01\x01B\r\n" +
	"\v_commitment\"\x85\x01\n" +
	"\x1aGetLatestBlockhashResponse\x12\x12\n" +
	"\x04slot\x18\x01 \x01(\x04R\x04slot\x12\x1c\n" +
	"\tblockhash\x18\x02 \x01(\tR\tblockhash\x125\n" +
	"\x17last_valid_block_height\x18\x03 \x01(\x04R\x14lastValidBlockHeight\"d\n" +
	"\x15GetBlockHeightRequest\x12<\n" +
	"\n" +
	"commitment\x18\x01 \x01(\x0e2\x17.geyser.CommitmentLevelH\x00R\n" +
	"commitment\x88\x01\x01B\r\n" +
	"\v_commitment\";\n" +
	"\x16GetBlockHeightResponse\x12!\n" +
	"\fblock_height\x18\x01 \x01(\x04R\vblockHeight\"]\n" +
	"\x0eGetSlotRequest\x12<\n" +
	"\n" +
	"commitment\x18\x01 \x01(\x0e2\x17.geyser.CommitmentLevelH\x00R\n" +
	"commitment\x88\x01\x01B\r\n" +
	"\v_commitment\"%\n" +
	"\x0fGetSlotResponse\x12\x12\n" +
	"\x04slot\x18\x01 \x01(\x04R\x04slot\"\x13\n" +
	"\x11GetVersionRequest\".\n" +
	"\x12GetVersionResponse\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\"\x84\x01\n" +
	"\x17IsBlockhashValidRequest\x12\x1c\n" +
	"\tblockhash\x18\x01 \x01(\tR\tblockhash\x12<\n" +
	"\n" +
	"commitment\x18\x02 \x01(\x0e2\x17.geyser.CommitmentLevelH\x00R\n" +
	"commitment\x88\x01\x01B\r\n" +
	"\v_commitment\"D\n" +
	"\x18IsBlockhashValidResponse\x12\x12\n" +
	"\x04slot\x18\x01 \x01(\x04R\x04slot\x12\x14\n" +
	"\x05valid\x18\x02 \x01(\bR\x05valid*>\n" +
	"\x0fCommitmentLevel\x12\r\n" +
	"\tPROCESSED\x10\x00\x12\r\n" +
	"\tCONFIRMED\x10\x01\x12\r\n" +
	"\tFINALIZED\x10\x02*\xa1\x01\n" +
	"\n" +
	"SlotStatus\x12\x12\n" +
	"\x0eSLOT_PROCESSED\x10\x00\x12\x12\n" +
	"\x0eSLOT_CONFIRMED\x10\x01\x12\x12\n" +
	"\x0eSLOT_FINALIZED\x10\x02\x12\x1d\n" +
	"\x19SLOT_FIRST_SHRED_RECEIVED\x10\x03\x12\x12\n" +
	"\x0eSLOT_COMPLETED\x10\x04\x12\x15\n" +
	"\x11SLOT_CREATED_BANK\x10\x05\x12\r\n" +
	"\tSLOT_DEAD\x10\x062\xf5\x04\n" +
	"\x06Geyser\x12D\n" +
	"\tSubscribe\x12\x18.geyser.SubscribeRequest\x1a\x17.geyser.SubscribeUpdate\"\x00(\x010\x01\x12`\n" +
	"\x13SubscribeReplayInfo\x12\".geyser.SubscribeReplayInfoRequest\x1a#.geyser.SubscribeReplayInfoResponse\"\x00\x123\n" +
	"\x04Ping\x12\x13.geyser.PingRequest\x1a\x14.geyser.PongResponse\"\x00\x12]\n" +
	"\x12GetLatestBlockhash\x12!.geyser.GetLatestBlockhashRequest\x1a\".geyser.GetLatestBlockhashResponse\"\x00\x12Q\n" +
	"\x0eGetBlockHeight\x12\x1d.geyser.GetBlockHeightRequest\x1a\x1e.geyser.GetBlockHeightResponse\"\x00\x12<\n" +
	"\aGetSlot\x12\x16.geyser.GetSlotRequest\x1a\x17.geyser.GetSlotResponse\"\x00\x12W\n" +
	"\x10IsBlockhashValid\x12\x1f.geyser.IsBlockhashValidRequest\x1a .geyser.IsBlockhashValidResponse\"\x00\x12E\n" +
	"\n" +
	"GetVersion\x12\x19.geyser.GetVersionRequest\x1a\x1a.geyser.GetVersionResponse\"\x00B;Z9github.com/rpcpool/yellowstone-grpc/examples/golang/protoP\x01b\x06proto3"

var (
	file_geyser_proto_rawDescOnce sync.Once
	file_geyser_proto_rawDescData []byte
)

func file_geyser_proto_rawDescGZIP() []byte {
	file_geyser_proto_rawDescOnce.Do(func() {
		file_geyser_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_geyser_proto_rawDesc), len(file_geyser_proto_rawDesc)))
	})
	return file_geyser_proto_rawDescData
}

var file_geyser_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_geyser_proto_msgTypes = make([]protoimpl.MessageInfo, 45)
var file_geyser_proto_goTypes = []any{
	(CommitmentLevel)(0),                                 // 0: geyser.CommitmentLevel
	(SlotStatus)(0),                                      // 1: geyser.SlotStatus
	(*SubscribeRequest)(nil),                             // 2: geyser.SubscribeRequest
	(*SubscribeRequestFilterAccounts)(nil),               // 3: geyser.SubscribeRequestFilterAccounts
	(*SubscribeRequestFilterAccountsFilter)(nil),         // 4: geyser.SubscribeRequestFilterAccountsFilter
	(*SubscribeRequestFilterAccountsFilterMemcmp)(nil),   // 5: geyser.SubscribeRequestFilterAccountsFilterMemcmp
	(*SubscribeRequestFilterAccountsFilterLamports)(nil), // 6: geyser.SubscribeRequestFilterAccountsFilterLamports
	(*SubscribeRequestFilterSlots)(nil),                  // 7: geyser.SubscribeRequestFilterSlots
	(*SubscribeRequestFilterTransactions)(nil),           // 8: geyser.SubscribeRequestFilterTransactions
	(*SubscribeRequestFilterBlocks)(nil),                 // 9: geyser.SubscribeRequestFilterBlocks
	(*SubscribeRequestFilterBlocksMeta)(nil),             // 10: geyser.SubscribeRequestFilterBlocksMeta
	(*SubscribeRequestFilterEntry)(nil),                  // 11: geyser.SubscribeRequestFilterEntry
	(*SubscribeRequestAccountsDataSlice)(nil),            // 12: geyser.SubscribeRequestAccountsDataSlice
	(*SubscribeRequestPing)(nil),                         // 13: geyser.SubscribeRequestPing
	(*SubscribeUpdate)(nil),                              // 14: geyser.SubscribeUpdate
	(*SubscribeUpdateAccount)(nil),                       // 15: geyser.SubscribeUpdateAccount
	(*SubscribeUpdateAccountInfo)(nil),                   // 16: geyser.SubscribeUpdateAccountInfo
	(*SubscribeUpdateSlot)(nil),                          // 17: geyser.SubscribeUpdateSlot
	(*SubscribeUpdateTransaction)(nil),                   // 18: geyser.SubscribeUpdateTransaction
	(*SubscribeUpdateTransactionInfo)(nil),               // 19: geyser.SubscribeUpdateTransactionInfo
	(*SubscribeUpdateTransactionStatus)(nil),             // 20: geyser.SubscribeUpdateTransactionStatus
	(*SubscribeUpdateBlock)(nil),                         // 21: geyser.SubscribeUpdateBlock
	(*SubscribeUpdateBlockMeta)(nil),                     // 22: geyser.SubscribeUpdateBlockMeta
	(*SubscribeUpdateEntry)(nil),                         // 23: geyser.SubscribeUpdateEntry
	(*SubscribeUpdatePing)(nil),                          // 24: geyser.SubscribeUpdatePing
	(*SubscribeUpdatePong)(nil),                          // 25: geyser.SubscribeUpdatePong
	(*SubscribeReplayInfoRequest)(nil),                   // 26: geyser.SubscribeReplayInfoRequest
	(*SubscribeReplayInfoResponse)(nil),                  // 27: geyser.SubscribeReplayInfoResponse
	(*PingRequest)(nil),                                  // 28: geyser.PingRequest
	(*PongResponse)(nil),                                 // 29: geyser.PongResponse
	(*GetLatestBlockhashRequest)(nil),                    // 30: geyser.GetLatestBlockhashRequest
	(*GetLatestBlockhashResponse)(nil),                   // 31: geyser.GetLatestBlockhashResponse
	(*GetBlockHeightRequest)(nil),                        // 32: geyser.GetBlockHeightRequest
	(*GetBlockHeightResponse)(nil),                       // 33: geyser.GetBlockHeightResponse
	(*GetSlotRequest)(nil),                               // 34: geyser.GetSlotRequest
	(*GetSlotResponse)(nil),                              // 35: geyser.GetSlotResponse
	(*GetVersionRequest)(nil),                            // 36: geyser.GetVersionRequest
	(*GetVersionResponse)(nil),                           // 37: geyser.GetVersionResponse
	(*IsBlockhashValidRequest)(nil),                      // 38: geyser.IsBlockhashValidRequest
	(*IsBlockhashValidResponse)(nil),                     // 39: geyser.IsBlockhashValidResponse
	nil,                                                  // 40: geyser.SubscribeRequest.AccountsEntry
	nil,                                                  // 41: geyser.SubscribeRequest.SlotsEntry
	nil,                                                  // 42: geyser.SubscribeRequest.TransactionsEntry
	nil,                                                  // 43: geyser.SubscribeRequest.TransactionsStatusEntry
	nil,                                                  // 44: geyser.SubscribeRequest.BlocksEntry
	nil,                                                  // 45: geyser.SubscribeRequest.BlocksMetaEntry
	nil,                                                  // 46: geyser.SubscribeRequest.EntryEntry
	(*timestamp.Timestamp)(nil),                          // 47: google.protobuf.Timestamp
	(*Transaction)(nil),                                  // 48: solana.storage.ConfirmedBlock.Transaction
	(*TransactionStatusMeta)(nil),                        // 49: solana.storage.ConfirmedBlock.TransactionStatusMeta
	(*TransactionError)(nil),                             // 50: solana.storage.ConfirmedBlock.TransactionError
	(*Rewards)(nil),                                      // 51: solana.storage.ConfirmedBlock.Rewards
	(*UnixTimestamp)(nil),                                // 52: solana.storage.ConfirmedBlock.UnixTimestamp
	(*BlockHeight)(nil),                                  // 53: solana.storage.ConfirmedBlock.BlockHeight
}
var file_geyser_proto_depIdxs = []int32{
	40, // 0: geyser.SubscribeRequest.accounts:type_name -> geyser.SubscribeRequest.AccountsEntry
	41, // 1: geyser.SubscribeRequest.slots:type_name -> geyser.SubscribeRequest.SlotsEntry
	42, // 2: geyser.SubscribeRequest.transactions:type_name -> geyser.SubscribeRequest.TransactionsEntry
	43, // 3: geyser.SubscribeRequest.transactions_status:type_name -> geyser.SubscribeRequest.TransactionsStatusEntry
	44, // 4: geyser.SubscribeRequest.blocks:type_name -> geyser.SubscribeRequest.BlocksEntry
	45, // 5: geyser.SubscribeRequest.blocks_meta:type_name -> geyser.SubscribeRequest.BlocksMetaEntry
	46, // 6: geyser.SubscribeRequest.entry:type_name -> geyser.SubscribeRequest.EntryEntry
	0,  // 7: geyser.SubscribeRequest.commitment:type_name -> geyser.CommitmentLevel
	12, // 8: geyser.SubscribeRequest.accounts_data_slice:type_name -> geyser.SubscribeRequestAccountsDataSlice
	13, // 9: geyser.SubscribeRequest.ping:type_name -> geyser.SubscribeRequestPing
	4,  // 10: geyser.SubscribeRequestFilterAccounts.filters:type_name -> geyser.SubscribeRequestFilterAccountsFilter
	5,  // 11: geyser.SubscribeRequestFilterAccountsFilter.memcmp:type_name -> geyser.SubscribeRequestFilterAccountsFilterMemcmp
	6,  // 12: geyser.SubscribeRequestFilterAccountsFilter.lamports:type_name -> geyser.SubscribeRequestFilterAccountsFilterLamports
	15, // 13: geyser.SubscribeUpdate.account:type_name -> geyser.SubscribeUpdateAccount
	17, // 14: geyser.SubscribeUpdate.slot:type_name -> geyser.SubscribeUpdateSlot
	18, // 15: geyser.SubscribeUpdate.transaction:type_name -> geyser.SubscribeUpdateTransaction
	20, // 16: geyser.SubscribeUpdate.transaction_status:type_name -> geyser.SubscribeUpdateTransactionStatus
	21, // 17: geyser.SubscribeUpdate.block:type_name -> geyser.SubscribeUpdateBlock
	24, // 18: geyser.SubscribeUpdate.ping:type_name -> geyser.SubscribeUpdatePing
	25, // 19: geyser.SubscribeUpdate.pong:type_name -> geyser.SubscribeUpdatePong
	22, // 20: geyser.SubscribeUpdate.block_meta:type_name -> geyser.SubscribeUpdateBlockMeta
	23, // 21: geyser.SubscribeUpdate.entry:type_name -> geyser.SubscribeUpdateEntry
	47, // 22: geyser.SubscribeUpdate.created_at:type_name -> google.protobuf.Timestamp
	16, // 23: geyser.SubscribeUpdateAccount.account:type_name -> geyser.SubscribeUpdateAccountInfo
	1,  // 24: geyser.SubscribeUpdateSlot.status:type_name -> geyser.SlotStatus
	19, // 25: geyser.SubscribeUpdateTransaction.transaction:type_name -> geyser.SubscribeUpdateTransactionInfo
	48, // 26: geyser.SubscribeUpdateTransactionInfo.transaction:type_name -> solana.storage.ConfirmedBlock.Transaction
	49, // 27: geyser.SubscribeUpdateTransactionInfo.meta:type_name -> solana.storage.ConfirmedBlock.TransactionStatusMeta
	50, // 28: geyser.SubscribeUpdateTransactionStatus.err:type_name -> solana.storage.ConfirmedBlock.TransactionError
	51, // 29: geyser.SubscribeUpdateBlock.rewards:type_name -> solana.storage.ConfirmedBlock.Rewards
	52, // 30: geyser.SubscribeUpdateBlock.block_time:type_name -> solana.storage.ConfirmedBlock.UnixTimestamp
	53, // 31: geyser.SubscribeUpdateBlock.block_height:type_name -> solana.storage.ConfirmedBlock.BlockHeight
	19, // 32: geyser.SubscribeUpdateBlock.transactions:type_name -> geyser.SubscribeUpdateTransactionInfo
	16, // 33: geyser.SubscribeUpdateBlock.accounts:type_name -> geyser.SubscribeUpdateAccountInfo
	23, // 34: geyser.SubscribeUpdateBlock.entries:type_name -> geyser.SubscribeUpdateEntry
	51, // 35: geyser.SubscribeUpdateBlockMeta.rewards:type_name -> solana.storage.ConfirmedBlock.Rewards
	52, // 36: geyser.SubscribeUpdateBlockMeta.block_time:type_name -> solana.storage.ConfirmedBlock.UnixTimestamp
	53, // 37: geyser.SubscribeUpdateBlockMeta.block_height:type_name -> solana.storage.ConfirmedBlock.BlockHeight
	0,  // 38: geyser.GetLatestBlockhashRequest.commitment:type_name -> geyser.CommitmentLevel
	0,  // 39: geyser.GetBlockHeightRequest.commitment:type_name -> geyser.CommitmentLevel
	0,  // 40: geyser.GetSlotRequest.commitment:type_name -> geyser.CommitmentLevel
	0,  // 41: geyser.IsBlockhashValidRequest.commitment:type_name -> geyser.CommitmentLevel
	3,  // 42: geyser.SubscribeRequest.AccountsEntry.value:type_name -> geyser.SubscribeRequestFilterAccounts
	7,  // 43: geyser.SubscribeRequest.SlotsEntry.value:type_name -> geyser.SubscribeRequestFilterSlots
	8,  // 44: geyser.SubscribeRequest.TransactionsEntry.value:type_name -> geyser.SubscribeRequestFilterTransactions
	8,  // 45: geyser.SubscribeRequest.TransactionsStatusEntry.value:type_name -> geyser.SubscribeRequestFilterTransactions
	9,  // 46: geyser.SubscribeRequest.BlocksEntry.value:type_name -> geyser.SubscribeRequestFilterBlocks
	10, // 47: geyser.SubscribeRequest.BlocksMetaEntry.value:type_name -> geyser.SubscribeRequestFilterBlocksMeta
	11, // 48: geyser.SubscribeRequest.EntryEntry.value:type_name -> geyser.SubscribeRequestFilterEntry
	2,  // 49: geyser.Geyser.Subscribe:input_type -> geyser.SubscribeRequest
	26, // 50: geyser.Geyser.SubscribeReplayInfo:input_type -> geyser.SubscribeReplayInfoRequest
	28, // 51: geyser.Geyser.Ping:input_type -> geyser.PingRequest
	30, // 52: geyser.Geyser.GetLatestBlockhash:input_type -> geyser.GetLatestBlockhashRequest
	32, // 53: geyser.Geyser.GetBlockHeight:input_type -> geyser.GetBlockHeightRequest
	34, // 54: geyser.Geyser.GetSlot:input_type -> geyser.GetSlotRequest
	38, // 55: geyser.Geyser.IsBlockhashValid:input_type -> geyser.IsBlockhashValidRequest
	36, // 56: geyser.Geyser.GetVersion:input_type -> geyser.GetVersionRequest
	14, // 57: geyser.Geyser.Subscribe:output_type -> geyser.SubscribeUpdate
	27, // 58: geyser.Geyser.SubscribeReplayInfo:output_type -> geyser.SubscribeReplayInfoResponse
	29, // 59: geyser.Geyser.Ping:output_type -> geyser.PongResponse
	31, // 60: geyser.Geyser.GetLatestBlockhash:output_type -> geyser.GetLatestBlockhashResponse
	33, // 61: geyser.Geyser.GetBlockHeight:output_type -> geyser.GetBlockHeightResponse
	35, // 62: geyser.Geyser.GetSlot:output_type -> geyser.GetSlotResponse
	39, // 63: geyser.Geyser.IsBlockhashValid:output_type -> geyser.IsBlockhashValidResponse
	37, // 64: geyser.Geyser.GetVersion:output_type -> geyser.GetVersionResponse
	57, // [57:65] is the sub-list for method output_type
	49, // [49:57] is the sub-list for method input_type
	49, // [49:49] is the sub-list for extension type_name
	49, // [49:49] is the sub-list for extension extendee
	0,  // [0:49] is the sub-list for field type_name
}

func init() { file_geyser_proto_init() }
func file_geyser_proto_init() {
	if File_geyser_proto != nil {
		return
	}
	file_solana_storage_proto_init()
	file_geyser_proto_msgTypes[0].OneofWrappers = []any{}
	file_geyser_proto_msgTypes[1].OneofWrappers = []any{}
	file_geyser_proto_msgTypes[2].OneofWrappers = []any{
		(*SubscribeRequestFilterAccountsFilter_Memcmp)(nil),
		(*SubscribeRequestFilterAccountsFilter_Datasize)(nil),
		(*SubscribeRequestFilterAccountsFilter_TokenAccountState)(nil),
		(*SubscribeRequestFilterAccountsFilter_Lamports)(nil),
	}
	file_geyser_proto_msgTypes[3].OneofWrappers = []any{
		(*SubscribeRequestFilterAccountsFilterMemcmp_Bytes)(nil),
		(*SubscribeRequestFilterAccountsFilterMemcmp_Base58)(nil),
		(*SubscribeRequestFilterAccountsFilterMemcmp_Base64)(nil),
	}
	file_geyser_proto_msgTypes[4].OneofWrappers = []any{
		(*SubscribeRequestFilterAccountsFilterLamports_Eq)(nil),
		(*SubscribeRequestFilterAccountsFilterLamports_Ne)(nil),
		(*SubscribeRequestFilterAccountsFilterLamports_Lt)(nil),
		(*SubscribeRequestFilterAccountsFilterLamports_Gt)(nil),
	}
	file_geyser_proto_msgTypes[5].OneofWrappers = []any{}
	file_geyser_proto_msgTypes[6].OneofWrappers = []any{}
	file_geyser_proto_msgTypes[7].OneofWrappers = []any{}
	file_geyser_proto_msgTypes[12].OneofWrappers = []any{
		(*SubscribeUpdate_Account)(nil),
		(*SubscribeUpdate_Slot)(nil),
		(*SubscribeUpdate_Transaction)(nil),
		(*SubscribeUpdate_TransactionStatus)(nil),
		(*SubscribeUpdate_Block)(nil),
		(*SubscribeUpdate_Ping)(nil),
		(*SubscribeUpdate_Pong)(nil),
		(*SubscribeUpdate_BlockMeta)(nil),
		(*SubscribeUpdate_Entry)(nil),
	}
	file_geyser_proto_msgTypes[14].OneofWrappers = []any{}
	file_geyser_proto_msgTypes[15].OneofWrappers = []any{}
	file_geyser_proto_msgTypes[25].OneofWrappers = []any{}
	file_geyser_proto_msgTypes[28].OneofWrappers = []any{}
	file_geyser_proto_msgTypes[30].OneofWrappers = []any{}
	file_geyser_proto_msgTypes[32].OneofWrappers = []any{}
	file_geyser_proto_msgTypes[36].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_geyser_proto_rawDesc), len(file_geyser_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   45,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_geyser_proto_goTypes,
		DependencyIndexes: file_geyser_proto_depIdxs,
		EnumInfos:         file_geyser_proto_enumTypes,
		MessageInfos:      file_geyser_proto_msgTypes,
	}.Build()
	File_geyser_proto = out.File
	file_geyser_proto_goTypes = nil
	file_geyser_proto_depIdxs = nil
}
